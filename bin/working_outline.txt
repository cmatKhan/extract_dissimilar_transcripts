
mkdir extract_dissimilar_results_${basename}
    mkdir for ref_db
    mkdir for each input transcriptome
        subdir baseaname_db for each
    mkdir log

get basename -- user input to confirm/rename

make initial database from reference transcriptome
    deposit in ref_database

blast each input_transcriptome against ref_transcriptome,
    create ${basename}_blast_refTranscriptome.tsv
       deposit in directory blast_results in input_transcriptome_dir

get unique names ${basename}_blast_refTranscriptome.tsv

--visualize above

extract fasta of only transcripts not in unique_similar.tsv

create concat transcriptome MINUS GIVEN TRANSCRIPTOME of combination set {input transcriptome}

make database of each resultant transcriptomes

blast each transcriptome against appropriate minus transcriptome

--visualize above, include both visualize results in single pdf (sep pages)

concat result to ref_transcriptome
    also deposit concat set alone

in log:
    print description of each step to stdout, capture in log
    print extract_dissimilar_complete. Results are in ${realpath/to/extract_dissimilar_results_${basename}
    

In master script
    provide small text dataset with appropriate file names. Run program on this first (no need to prompt
    user for basenames. Tell user to troubleshoot this before inputting their own data, if not working
    when user inputs names, make directory structure first.
        provide flag to use existing directory structure, if something fails later in process 


misc
   print/visualize overall similarity between transcriptomes
   create parameters to vary degree of similarity to extract
   offer a default which extracts statistically dissimilar based on inputted data (use avg   
   exon length?)
